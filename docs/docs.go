// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Boru Tamene Yadeta",
            "url": "https://github.com/BoruTamena"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accept": {
            "put": {
                "description": "accept request to stay connected with them regulary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friend"
                ],
                "summary": "Accept friend request",
                "parameters": [
                    {
                        "description": "friend update object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FriendUpdate"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/block": {
            "put": {
                "description": "block friend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friend"
                ],
                "summary": "Block friend request",
                "parameters": [
                    {
                        "description": "friend update object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FriendUpdate"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/friend": {
            "get": {
                "description": "get friends",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friend"
                ],
                "summary": "getting friends all friendlists",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/friend/{user_name}": {
            "get": {
                "description": "sending friend request to get connected with people",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friend"
                ],
                "summary": "sending friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "friend user name ",
                        "name": "user_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/seemessage": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "responses": {}
            }
        },
        "/ws": {
            "get": {
                "description": "Connects to the WebSocket server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "websocket"
                ],
                "summary": "WebSocket Connection",
                "responses": {
                    "200": {
                        "description": "Connected",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.FriendUpdate": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Go Chat",
	Description:      "This is a  Swagger API documentation for GoChat Open source Project.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
